/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package customize_preferences;

import java.awt.Color;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.RefineryUtilities;

/**
 * Class that opens Provider interface. In this interface the user will see all the clients from database <br>
 * and can calculate the offers for those clients. <br>
 * Attributes : <br>
 * - clientsModel : a ClientsTableModel object <br>
 * - offersModel : a OffersTableModel object <br>
 * - allocationModel: AllocationTableModel object <br>
 * @author Robert
 */
public class ProviderGUI extends javax.swing.JFrame {
    
    protected ClientsTableModel clientsModel;
    protected OffersTableModel offersModel;
    protected AllocationTableModel allocatationModel;
 
    /**
     * Constructor that instantiate new form ProviderGUI object.
     */
    public ProviderGUI() {
        getContentPane().setBackground( new Color(200, 100, 100));
        initComponents();
        clientsModel = new ClientsTableModel();
        offersModel = new OffersTableModel();
        allocatationModel = new AllocationTableModel();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice defaultScreen = ge.getDefaultScreenDevice();
        Rectangle rect = defaultScreen.getDefaultConfiguration().getBounds();
        int x = (int) rect.getMaxX() - this.getWidth();
        int y = (int) rect.getMaxY() - this.getHeight();
        this.setLocation(x, y/2);
        setComboBoxValues();
    }
    
    /**
     * Refresh the clients table
     */
    public void refreshClientsTable(){
        if( DatabaseManager.instance.isConnected() ) {
            clientsModel.setClients( DatabaseManager.instance.getClients() );
            clientsModel.fireTableDataChanged();
            clientsTable.setModel(clientsModel);
        }else{
            new JOptionPane().showMessageDialog(this, "Eroare la conexiunea cu baza de date");
        }
    }
    
    /**
     * Refresh the offers table
     */
    public void refreshOffersTable(){
        if( DatabaseManager.instance.isConnected() ) {
            offersModel.setOffers( DatabaseManager.instance.getOffers() );
            offersTable.setModel( offersModel );
            offersModel.fireTableDataChanged();
        }else{
            new JOptionPane().showMessageDialog(this, "Eroare la conexiunea cu baza de date");
        }
    }
    
    /**
     * Refresh the allocation table 
     */
    public void refreshAllocationTable(){
        if( DatabaseManager.instance.isConnected() ) {
            allocatationModel.setOffers( DatabaseManager.instance.getOffers() );
            allocationTable.setModel( allocatationModel );
            allocatationModel.fireTableDataChanged();
        }else{
            new JOptionPane().showMessageDialog(this, "Eroare la conexiunea cu baza de date");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        refreshClientsTableButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        offersTable = new javax.swing.JTable();
        calculateSimpleKMeansButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        allocationTable = new javax.swing.JTable();
        makePlotButton = new javax.swing.JButton();
        set1ComboBox = new javax.swing.JComboBox();
        set2ComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agent Furnizor");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(200, 100, 100));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Preferintele personalizate ale clientilor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 14))); // NOI18N

        refreshClientsTableButton.setBackground(new java.awt.Color(102, 102, 102));
        refreshClientsTableButton.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        refreshClientsTableButton.setText("Afiseaza");
        refreshClientsTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshClientsTableButtonActionPerformed(evt);
            }
        });

        clientsTable.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        clientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Client", "Criteriu 1", "Criteriu 2", "Criteriu 3", "Criteriu 4", "Criteriu 5", "Criteriu 6", "Criteriu 7", "Criteriu 8"
            }
        ));
        clientsTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(clientsTable);
        clientsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(refreshClientsTableButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshClientsTableButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(200, 100, 100));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Realizarea ofertelor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 14))); // NOI18N

        offersTable.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        offersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Oferta ", "Criteriu 1", "Criteriu 2", "Criteriu 3", "Criteriu 4", "Criteriu 5", "Criteriu 6", "Criteriu 7", "Criteriu 8"
            }
        ));
        offersTable.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(offersTable);
        offersTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        calculateSimpleKMeansButton.setBackground(new java.awt.Color(102, 102, 102));
        calculateSimpleKMeansButton.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        calculateSimpleKMeansButton.setText("<html>\n<p align=\"center\">Realizeaza ofertele pe baza preferintelor clientilor </p>\n</html>");
        calculateSimpleKMeansButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateSimpleKMeansButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calculateSimpleKMeansButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(calculateSimpleKMeansButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(200, 100, 100));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Alocarea ofertelor pe clienti", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 14))); // NOI18N

        allocationTable.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        allocationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Oferta", "Client/Clienti"
            }
        ));
        jScrollPane3.setViewportView(allocationTable);

        makePlotButton.setBackground(new java.awt.Color(102, 102, 102));
        makePlotButton.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        makePlotButton.setText("Realizeaza grafic");
        makePlotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePlotButtonActionPerformed(evt);
            }
        });

        set1ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        set2ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(set1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(set2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(makePlotButton)
                        .addGap(33, 33, 33)))
                .addGap(61, 61, 61))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(set1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(set2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(makePlotButton)))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshClientsTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshClientsTableButtonActionPerformed
        refreshClientsTable();
        refreshOffersTable();
        refreshAllocationTable();
        
    }//GEN-LAST:event_refreshClientsTableButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        FrameInstanceHolder.instance.setProviderFrame(null);
    }//GEN-LAST:event_formWindowClosed

    private void calculateSimpleKMeansButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateSimpleKMeansButtonActionPerformed
        // TODO add your handling code here:
        if( FrameInstanceHolder.instance.getSimpleKMeansFrame() == null ){
            SimpleKMeansGUI simpleKMeansFrame = new SimpleKMeansGUI();
            simpleKMeansFrame.setVisible(true);
            FrameInstanceHolder.instance.setSimpleKMeansFrame( simpleKMeansFrame );
        }else{
            FrameInstanceHolder.instance.getSimpleKMeansFrame().toFront();
        }
        
    }//GEN-LAST:event_calculateSimpleKMeansButtonActionPerformed

    /**
     * Set values for combo boxes 
     */
    private void setComboBoxValues(){
        DefaultComboBoxModel set1Model = ( DefaultComboBoxModel ) set1ComboBox.getModel();
        DefaultComboBoxModel set2Model = ( DefaultComboBoxModel ) set2ComboBox.getModel();
        set1Model.removeAllElements();
        set2Model.removeAllElements();
        set1Model.addElement( "Criteriu 1");
        set1Model.addElement( "Criteriu 2");
        set1Model.addElement( "Criteriu 3");
        set1Model.addElement( "Criteriu 4");
        set1Model.addElement( "Criteriu 5");
        set1Model.addElement( "Criteriu 6");
        set1Model.addElement( "Criteriu 7");
        set1Model.addElement( "Criteriu 8");
        set2Model.addElement( "Criteriu 1");
        set2Model.addElement( "Criteriu 2");
        set2Model.addElement( "Criteriu 3");
        set2Model.addElement( "Criteriu 4");
        set2Model.addElement( "Criteriu 5");
        set2Model.addElement( "Criteriu 6");
        set2Model.addElement( "Criteriu 7");
        set2Model.addElement( "Criteriu 8");
        
    }
    

    private void makePlotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePlotButtonActionPerformed
        // TODO add your handling code here:
        List<Offer> offers = DatabaseManager.instance.getOffers();
        if( !offers.isEmpty() ){
            String set1Value = ( String )set1ComboBox.getSelectedItem();
            String set2Value = ( String )set2ComboBox.getSelectedItem();
            double[] set1Values = getValuesFromOffersFor(offers, set1Value );
            double[] set2Values = getValuesFromOffersFor(offers, set2Value );
            XYSeries series = computeDataForPlot( set1Values, set2Values );
           
            XYSeriesCollection data = new XYSeriesCollection(series);
            JFreeChart chart = ChartFactory.createXYLineChart( "", "X", "Y", data, PlotOrientation.VERTICAL, true, false, false );
            XYPlot plot = (XYPlot) chart.getPlot();
            XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
            renderer.setSeriesLinesVisible(0, false);
            renderer.setSeriesShapesVisible(0, true);
            plot.setRenderer(renderer);
            DrawOffers drawPlot = new DrawOffers("Offers", chart );
            drawPlot.setDefaultCloseOperation( DISPOSE_ON_CLOSE );
            drawPlot.pack();
            RefineryUtilities.centerFrameOnScreen(drawPlot);
            drawPlot.setVisible(true);
        }else{
            
        }
        
        
    }//GEN-LAST:event_makePlotButtonActionPerformed

    /**
     * Gets the values for a particular column from offers table
     * @param offers the list of offers 
     * @param criteriu a column name 
     * @return a vector, having the size equal to offers list, of values 
     */
    private double[] getValuesFromOffersFor( List<Offer> offers, String criteriu ){
        double[] vector = new double[ offers.size() ];
        
        for( int index = 0; index < offers.size(); index ++ ){
            Offer offer = offers.get(index);
            if( criteriu == "Criteriu 1" ){
                vector[ index ] = offer.getCriteriu1();
            }else if( criteriu == "Criteriu 2" ){
                vector[ index ] = offer.getCriteriu2();
            }else if( criteriu == "Criteriu 3" ){
                vector[ index ] = offer.getCriteriu3();
            }else if( criteriu == "Criteriu 4" ){
                vector[ index ] = offer.getCriteriu4();
            }else if( criteriu == "Criteriu 5" ){
                vector[ index ] = offer.getCriteriu5();
            }else if( criteriu == "Criteriu 6" ){
                vector[ index ] = offer.getCriteriu6();
            }else if( criteriu == "Criteriu 7" ){
                vector[ index ] = offer.getCriteriu7();
            }else if( criteriu == "Criteriu 8"  ){
                vector[ index ] = offer.getCriteriu8();
            }
        }
        return vector;
    }

    /**
     * Makes data, points, needed for plotting 
     * @param set1 a vector of values
     * @param set2 a vector of values
     * @return a XYSeries object
     */
    private XYSeries computeDataForPlot( double[] set1, double[] set2 ){
        XYSeries series = new XYSeries("Centroizi");
        for(int i = 0; i < set1.length; i++ ){
            series.add( set1[i], set2[i]);
        }
        return series;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allocationTable;
    private javax.swing.JButton calculateSimpleKMeansButton;
    private javax.swing.JTable clientsTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton makePlotButton;
    private javax.swing.JTable offersTable;
    private javax.swing.JButton refreshClientsTableButton;
    private javax.swing.JComboBox set1ComboBox;
    private javax.swing.JComboBox set2ComboBox;
    // End of variables declaration//GEN-END:variables
}
